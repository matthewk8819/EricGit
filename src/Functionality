Blob: 
- create blob from file
- create object folder 
- puts blob into objects folder with zipped contents

Index: 
- initialize index file
- add a filename (does the sha1 conversion with naming) (also creates blob + creates objects folder)
- remove removes from index and removes blob 

Tree: 
- Writes to file with sha1 name of contents to objects with the array of strings
- assumes objects folder already exists 

Commit: 
- Creates a commit with first line = String inputed in the constructor (make this sha1 of tree eventually)
- Works with the child and parent assigning
- date = line with date and time 
- referencing parent/child - refers to the objects/sha1 of that object 


Things to do for git/ methods: 
1) ADD HEAD POINTER - can just be a instance variable in Git object 

For every commit: 
- 





for deleting - when in index, it should have a new line called *delete* file1.txt (no sha1 here)
need to delete that file now (can check for this when scanning through index)
have to traverse through the trees, find where it was, set the previous tree to that tree and then have to add all the blobs since then

same for editing: would have the *edited* file1.txt -> its just changing the pointers, not changing the objects  

*if it was the first one, can't check for tree (have to check if it has a tree, then you add it to the current commit tree) 
just have to do the delete and then add the new blob 